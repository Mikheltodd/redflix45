/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.g2m2e1.redflix45.views;

import co.g2m2e1.redflix45.Context;
import co.g2m2e1.redflix45.models.Users;
import co.g2m2e1.redflix45.repositories.UsersRepository;
import java.util.List;
import java.util.Optional;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author ESLUNAP
 */
public class JPanelUsuarioR extends javax.swing.JPanel {

     UsersRepository userRepository;
     DefaultListModel listModel = new DefaultListModel();
    /**
     * Creates new form JPanelUsuario
     */
    public JPanelUsuarioR() {
        initComponents();
        jrbAlias.setSelected(true);
        userRepository = Context.getBean(UsersRepository.class);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupTipoConsulta = new javax.swing.ButtonGroup();
        jTextFieldAlias = new javax.swing.JTextField();
        jTextFieldNombre = new javax.swing.JTextField();
        jTextFieldApellido = new javax.swing.JTextField();
        jTextFieldEmail = new javax.swing.JTextField();
        jTextFieldCelular = new javax.swing.JTextField();
        jTextFieldFechaNto = new javax.swing.JTextField();
        jButtonConsultarU = new javax.swing.JButton();
        jButtonLimpiarCampos = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jrbAlias = new javax.swing.JRadioButton();
        jrbNombres = new javax.swing.JRadioButton();
        jrbApellido = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListUsuarios = new javax.swing.JList<>();

        setBackground(new java.awt.Color(255, 255, 255));

        jTextFieldAlias.setBorder(javax.swing.BorderFactory.createTitledBorder("Alias"));

        jTextFieldNombre.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre"));

        jTextFieldApellido.setBorder(javax.swing.BorderFactory.createTitledBorder("Apellido"));

        jTextFieldEmail.setBorder(javax.swing.BorderFactory.createTitledBorder("Email"));

        jTextFieldCelular.setBorder(javax.swing.BorderFactory.createTitledBorder("Celular"));

        jTextFieldFechaNto.setBorder(javax.swing.BorderFactory.createTitledBorder("Fecha nacimiento"));

        jButtonConsultarU.setText("Consultar");
        jButtonConsultarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarUActionPerformed(evt);
            }
        });

        jButtonLimpiarCampos.setText("Limpiar Campos");
        jButtonLimpiarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarCamposActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Consultar por: "));

        jrbAlias.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupTipoConsulta.add(jrbAlias);
        jrbAlias.setText("Alias");
        jrbAlias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAliasActionPerformed(evt);
            }
        });

        jrbNombres.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupTipoConsulta.add(jrbNombres);
        jrbNombres.setText("Nombre");

        jrbApellido.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupTipoConsulta.add(jrbApellido);
        jrbApellido.setText("Apellido");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jrbAlias, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jrbNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jrbApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbAlias)
                    .addComponent(jrbNombres)
                    .addComponent(jrbApellido))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jListUsuarios.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultados"));
        jListUsuarios.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jListUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListUsuariosMouseClicked(evt);
            }
        });
        jListUsuarios.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListUsuariosValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jListUsuarios);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldAlias, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldFechaNto, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jButtonConsultarU)
                        .addGap(35, 35, 35)
                        .addComponent(jButtonLimpiarCampos)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldAlias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldFechaNto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonConsultarU)
                    .addComponent(jButtonLimpiarCampos))
                .addContainerGap(33, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonConsultarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarUActionPerformed
        // TODO add your handling code here:
        try {
            
            if (jrbAlias.isSelected()) {
                String alias = jTextFieldAlias.getText();
                Optional<Users> optional = userRepository.findById(alias);

                if (alias.isEmpty()) {
                    System.out.println("No ha digitado un alias");
                    JOptionPane.showMessageDialog(null, "No ha digitado un alias", "Warning", JOptionPane.WARNING_MESSAGE);
                } else if (optional.isPresent()) {
                    listModel.addElement(optional.get().getUserName()+" "+optional.get().getUserLastname());
                    jTextFieldNombre.setText(optional.get().getUserName());
                    jTextFieldApellido.setText(optional.get().getUserLastname());
                    jTextFieldCelular.setText(String.valueOf(optional.get().getUserPhone()));
                    jTextFieldEmail.setText(optional.get().getUserEmail());
                    jTextFieldFechaNto.setText(optional.get().getUserBirthday());
                    jTextFieldAlias.requestFocus();
                    jListUsuarios.setModel(listModel);
                } else {
                    JOptionPane.showMessageDialog(null, "El usuario " + alias + " no fue encontrado", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }
            if (jrbNombres.isSelected()) {
                String nombre = jTextFieldNombre.getText();
                List<Users> userNames = userRepository.findByUserNameContaining(nombre);

                if (nombre.isEmpty()) {
                    System.out.println("No ha ingresado ningún nombre");
                    JOptionPane.showMessageDialog(null, "No ha digitado ningún nombre", "Warning", JOptionPane.WARNING_MESSAGE);
                } else if (!userNames.isEmpty()) {
                    for (Users userName : userNames) {
                        listModel.addElement(userName.getUserName()+" "+userName.getUserLastname());
                    }
                    jListUsuarios.setModel(listModel);
                } else {
                    JOptionPane.showMessageDialog(null, "El usuario con nombre " + nombre + " no fue encontrado", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }
            if (jrbApellido.isSelected()) {
                String apellido = jTextFieldApellido.getText();
                List<Users> userLastNames = userRepository.findByUserLastnameContaining(apellido);

                if (apellido.isEmpty()) {
                    System.out.println("No ha ingresado ningún apellido");
                    JOptionPane.showMessageDialog(null, "No ha digitado ningún apellido", "Warning", JOptionPane.WARNING_MESSAGE);
                } else if (!userLastNames.isEmpty()) {
                    for (Users userLastName : userLastNames) {
                        listModel.addElement(userLastName.getUserName()+" "+userLastName.getUserLastname());
                    }
                    jListUsuarios.setModel(listModel);
                } else {
                    JOptionPane.showMessageDialog(null, "El usuario con nombre " + apellido + " no fue encontrado", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }
        } catch (Exception e) {
            System.out.println("Error al realizar consulta");
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al realizar consulta", "Warning", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jButtonConsultarUActionPerformed

    private void jButtonLimpiarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarCamposActionPerformed
        // TODO add your handling code here:
        JTextField caja;
        for (int i = 0; i< this.getComponentCount();i++){
            if(this.getComponent(i).getClass().getName().equals("javax.swing.JTextField")){
                caja = (JTextField)this.getComponent(i);
                caja.setText("");            
            }        
        }
        listModel.clear();
        jListUsuarios.setModel(listModel);
    }//GEN-LAST:event_jButtonLimpiarCamposActionPerformed

    private void jrbAliasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAliasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrbAliasActionPerformed

    private void jListUsuariosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListUsuariosValueChanged
        // TODO add your handling code here:
  
    }//GEN-LAST:event_jListUsuariosValueChanged

    private void jListUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListUsuariosMouseClicked
        // TODO add your handling code here:
        if (jrbNombres.isSelected()){
            String nombre = jListUsuarios.getSelectedValue();
            String [] nombreSplit =nombre.split(" ");
            System.out.println(nombreSplit[0]);
            System.out.println(nombreSplit[1]);
            List<Users> userName = userRepository.findByUserNameAndUserLastname(nombreSplit[0],nombreSplit[1]);
            if (!userName.isEmpty()){
                jTextFieldAlias.setText(userName.get(0).getUserUsername());
                jTextFieldNombre.setText(userName.get(0).getUserName());
                jTextFieldApellido.setText(userName.get(0).getUserLastname());
                jTextFieldCelular.setText(String.valueOf(userName.get(0).getUserPhone()));
                jTextFieldEmail.setText(userName.get(0).getUserEmail());
                jTextFieldFechaNto.setText(userName.get(0).getUserBirthday());
                jTextFieldNombre.requestFocus();
                jListUsuarios.setModel(listModel);
                return;
            }else{
                System.out.println("El nombre que busca no fue encontrado");
                JOptionPane.showMessageDialog(null, "El nombre que busca no fue encontrado", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
        if (jrbApellido.isSelected()){
            String nombre = jListUsuarios.getSelectedValue();
            String [] nombreSplit =nombre.split(" ");
            System.out.println(nombreSplit[0]);
            System.out.println(nombreSplit[1]);
            List<Users> userLastName = userRepository.findByUserNameAndUserLastname(nombreSplit[0],nombreSplit[1]);
            if (!userLastName.isEmpty()){
                jTextFieldAlias.setText(userLastName.get(0).getUserUsername());
                jTextFieldNombre.setText(userLastName.get(0).getUserName());
                jTextFieldApellido.setText(userLastName.get(0).getUserLastname());
                jTextFieldCelular.setText(String.valueOf(userLastName.get(0).getUserPhone()));
                jTextFieldEmail.setText(userLastName.get(0).getUserEmail());
                jTextFieldFechaNto.setText(userLastName.get(0).getUserBirthday());
                jTextFieldAlias.requestFocus();
                jListUsuarios.setModel(listModel);
            }else{
                System.out.println("El apellido que busca no fue encontrado");
                JOptionPane.showMessageDialog(null, "El apellido que busca no fue encontrado", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jListUsuariosMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupTipoConsulta;
    private javax.swing.JButton jButtonConsultarU;
    private javax.swing.JButton jButtonLimpiarCampos;
    private javax.swing.JList<String> jListUsuarios;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldAlias;
    private javax.swing.JTextField jTextFieldApellido;
    private javax.swing.JTextField jTextFieldCelular;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldFechaNto;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JRadioButton jrbAlias;
    private javax.swing.JRadioButton jrbApellido;
    private javax.swing.JRadioButton jrbNombres;
    // End of variables declaration//GEN-END:variables
}
